{"version":3,"sources":["components/Toggle/ToggleSwitch.js","components/App/App.js","index.js"],"names":["ToggleSwitch","toggled","handleClick","onClick","className","App","useState","localStorage","getItem","checked","setChecked","React","useEffect","document","getElementsByTagName","setAttribute","setItem","ReactDOM","render","StrictMode","getElementById"],"mappings":"0OAIe,SAASA,EAAT,GAA8C,IAAvBC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,YAC3C,OACI,sBAAKC,QAASD,EAAaE,UAAS,iBAAYH,EAAS,QAAQ,IAAjE,UACA,qBAAKG,UAAU,UACf,gCACI,qBAAKA,UAAU,aACf,qBAAKA,UAAU,aACf,qBAAKA,UAAU,aACf,qBAAKA,UAAU,mBCR3B,IAiDeC,EAjDH,WAAM,MAKcC,mBAA2C,SAAlCC,aAAaC,QAAQ,UAL5C,mBAKTC,EALS,KAKAC,EALA,OAMaC,IAAML,UAAS,GAN5B,6BAYhBM,qBAAU,WACRC,SACGC,qBAAqB,QAAQ,GAC7BC,aAAa,aAAcR,aAAaC,QAAQ,YAClD,CAACC,IAsBJ,OACE,qBAAKL,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UAEE,cAAC,EAAD,CAAcH,QAASQ,EAASP,YAAa,YAnBjC,IAAZO,GACFF,aAAaS,QAAQ,QAAS,QAE9BN,GAAW,KAEXH,aAAaS,QAAQ,QAAS,SAE9BN,GAAW,OAaT,mBAAGN,UAAU,aAAb,qDC3CRa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFN,SAASO,eAAe,W","file":"static/js/main.e69581ea.chunk.js","sourcesContent":["import React from 'react';\r\nimport   './ToggleSwitch.css';\r\n\r\n\r\nexport default function ToggleSwitch({toggled, handleClick}){\r\n    return (\r\n        <div onClick={handleClick} className={`toggle ${toggled? \"night\":\"\"}`}>\r\n        <div className=\"notch\"/>\r\n        <div>\r\n            <div className=\"shape sm\" />\r\n            <div className=\"shape sm\"/>\r\n            <div className=\"shape md\" />\r\n            <div className=\"shape lg\" />\r\n        </div>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport ToggleSwitch from '../Toggle/ToggleSwitch';\n\nconst App = () => {\n  /**\n   * Determine if the checkbox should be checked base on the content\n   * of the localStorage item \"theme\"\n   */\n  const [checked, setChecked] = useState(localStorage.getItem(\"theme\") === \"dark\" ? true : false);\n  const [toggled, setToggled]= React.useState(false);\n\n  /**\n   * Everytime checked changes, update the property data-theme in the\n   * HTML so it uses the theme we have in localStorage\n   */\n  useEffect(() => {\n    document\n      .getElementsByTagName(\"HTML\")[0]\n      .setAttribute(\"data-theme\", localStorage.getItem(\"theme\"));\n  }, [checked]);\n\n  /**\n   * Update the state of checked and the content of our theme object\n   * in localStorage based on the checkbox toggle\n   */\n  const toggleThemeChange = () => {\n    if (checked === false) {\n      localStorage.setItem(\"theme\", \"dark\");\n      \n      setChecked(true);\n    } else {\n      localStorage.setItem(\"theme\", \"light\");\n\n      setChecked(false);\n    }\n  }\n\n  const handleClick=()=>{\n    setToggled((s) => !s);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        \n        <ToggleSwitch toggled={checked} handleClick={() => toggleThemeChange()} />\n        <p className=\"toggleText\">Click the button to toggle themes</p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}